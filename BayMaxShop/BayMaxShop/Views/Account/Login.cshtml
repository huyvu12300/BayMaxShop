@using BayMaxShop.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/main_styles.css">

<div class="container" style="margin-top:205px">
    
    <h2 style="margin-left: 495px; margin-top: 10px; color: red; position: absolute; z-index: 10; ">@ViewBag.Title.</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4 style="margin-left: 390px; position: absolute; z-index: 10; color: white; margin-top: 70px; width: 500px;">Use a local account to log in.</h4>
                    <hr style="width: 370px; margin-left: 25px;" />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="margin-left: 320px; position: absolute; z-index: 10; margin-top: 110px; width: 500px; color: white; font-size: 0px;">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10" style="opacity: 0.5;">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="margin-left: 320px; position: absolute; z-index: 10; margin-top: 160px; width: 500px; color: white; font-size: 0px;">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10" style="opacity: 0.5;">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="margin-left: 390px; position: absolute; z-index: 10; margin-top: 210px; width: 200px; color: white; font-size: 13px;">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox" >
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group" style="margin-left: 430px; position: absolute; z-index: 10; margin-top: 260px; width: 200px; color: white; ">
                        <div class="col-md-offset-2 col-md-10">
                            <input  style="width: 150px; border-radius: 10px; background-color: #D6D6D6;" type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>

                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                    <div class="img-loginbackground" style="position: absolute; z-index: 3;">
                        <img style="  background-size: cover; width: 1800px; height: 900px; margin-left: -320px; margin-top: -360px;  " src="~/Content/assets/images/ss.png" />
                    </div>
                    @* Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
                }


            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}